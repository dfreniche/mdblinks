{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Layout.js","config.js","pages/Home.js","providers/Realm.js","pages/Shorties.js","pages/Login.js","pages/Logout.js","pages/Stats.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","logoStyle","width","marginRight","logoSize","style","display","flexWrap","height","title","Navigation","className","location","useLocation","as","Link","active","pathname","to","gridStyle","css","headerStyle","sideNavStyle","mainStyle","Layout","settings","AUTH0","domain","process","clientId","redirectUri","window","origin","audience","REALM","appId","Home","isAuthenticated","useAuth0","Fragment","href","RealmProvider","useState","realmUser","setRealmUser","getAccessTokenSilently","useEffect","app","Realm","id","jwt","credentials","logIn","user","console","error","loginCustomJwt","providerState","RealmContext","Provider","value","children","createContext","Routes","insertModalOpened","setInsertModalOpened","qrCodeModalOpened","setQrCodeModalOpened","qrCodeDestination","setQrCodeDestination","chartModalOpened","setChartModalOpened","chartRoute","setChartRoute","routeStats","setRouteStats","route","setRoute","setTitle","description","setDescription","setTo","isPublic","setIsPublic","data","setData","useContext","currentUserId","qrCodeModalStyle","chartModalStyle","topBarStyle","canvasRef","useRef","getData","useCallback","functions","getAllRoutes","results","handleDelete","deleteRoute","handleModalConfirm","insertRoute","showQrCode","destinationUrl","canvas","current","QRCode","color","dark","showChartModal","stats","getRouteStats","onClick","variant","leftGlyph","glyph","open","onConfirm","onCancel","buttonText","label","placeholder","onChange","e","target","checked","setOpen","ref","visits","columns","sortBy","datum","owner","darkMode","_id","toString","fill","Login","loginWithRedirect","handleLogin","logout","handleLogout","Stats","ChartsEmbedSDK","baseUrl","createDashboard","dashboardId","widthMode","heightMode","render","document","getElementById","PrivateOutlet","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fontsURL","globalStyles","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5bfab35d.chunk.js","sourcesContent":["import { H1 } from '@leafygreen-ui/typography';\nimport { MongoDBLogoMark } from '@leafygreen-ui/logo';\n\nexport default function Header(props) {\n  let wrapperStyle = {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  }\n  \n  let logoSize = 48;\n\n  let logoStyle = { \n    width: `${logoSize}px`, \n    marginRight: `${logoSize/2}px`\n  };\n  \n  return(\n    <div style={wrapperStyle}>\n      <MongoDBLogoMark style={logoStyle} height={logoSize} />\n      <H1>{props.title}</H1>\n    </div>\n  )\n}","import { SideNav, SideNavItem } from '@leafygreen-ui/side-nav';\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function Navigation ({ className }) {\n  const location = useLocation();\n\n  return (\n    <SideNav aria-label=\"Navigation Bar\" className={className}>\n      <SideNavItem aria-label=\"Home\" as={Link} active={location.pathname === \"/\"} to=\"/\">Home</SideNavItem>\n      <SideNavItem aria-label=\"Short URLs\" as={Link} active={location.pathname === \"/app/routes\"} to=\"/app/routes\">Short URLs</SideNavItem>\n      <SideNavItem aria-label=\"Dashboard\" as={Link} active={location.pathname === \"/app/stats\"} to=\"/app/stats\">Dashboard</SideNavItem>\n      <SideNavItem aria-label=\"Logout\" as={Link} active={location.pathname === \"/logout\"} to=\"/logout\">Logout</SideNavItem>\n    </SideNav>\n  );\n}","import Header from \"./Header\";\nimport Navigation from \"./Navigation\";\nimport { css } from \"@leafygreen-ui/emotion\";import {\n  Outlet\n} from \"react-router-dom\";\n\nconst gridStyle = css`\n  display: grid;\n  grid-template:\n    [header-start] \"header header\" 107px [header-end body-start]\n    \"side-nav body\" auto [body-end] / auto 1fr;\n  width: 100vw;\n  max-width: 100%;\n  height: 100vh;\n  min-width: 767px;\n  margin: 0px;\n`;\n\nconst headerStyle = css`\n  grid-area: header;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 24px;\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n`;\n\nconst sideNavStyle = css`\n  grid-area: side-nav;\n`;\n\nconst mainStyle = css`\n  grid-area: body;\n  padding: 12px;\n`;\n\nexport default function Layout(props) {\n  return(\n    <div className={gridStyle}>\n      <section className={headerStyle}>\n        <Header title=\"URL Shortener\"/>\n      </section>\n      <Navigation className={sideNavStyle} />\n\n      <section className={mainStyle}>\n        <Outlet />\n      </section>\n    </div>\n  )\n}","const settings = {\n  AUTH0: {\n    domain: process.env.REACT_APP_AUTH0_DOMAIN || \"\",\n    clientId: process.env.REACT_APP_AUTH0_CLIENTID || \"\",\n    redirectUri: `${window.location.origin}`,\n    audience: process.env.REACT_APP_AUTH0_AUDIENCE || \"\"\n  },\n  REALM: {\n    appId: process.env.REACT_APP_REALM_APP_ID\n  }\n}\n\nexport default settings;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nexport default function Home () {\n  let { isAuthenticated } = useAuth0();\n  return  (\n    <React.Fragment>\n      Welcome to <a href=\"http://mdb.link\">mdb.link</a> admin UI.<br/><br/>\n      {!isAuthenticated &&\n        <Link to=\"/login\">Login</Link>\n      }\n    </React.Fragment>\n  )\n}","import { createContext, useContext, useState, useEffect } from \"react\";\nimport * as Realm from \"realm-web\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nfunction RealmProvider(props) {\n  let [realmUser, setRealmUser] = useState(null);\n  let appId = props.appId;\n  let { isAuthenticated, getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    async function loginCustomJwt() {\n      let app = new Realm.App({ id: appId });\n      let jwt = await getAccessTokenSilently({\n        audience: 'mdb-atlas'\n      });\n      const credentials = Realm.Credentials.jwt(jwt);\n      try {\n        const user = await app.logIn(credentials);\n        setRealmUser(user);\n        return user;\n      } catch (err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginCustomJwt();\n  }, [isAuthenticated, getAccessTokenSilently, appId])\n\n  let providerState = {\n    realmUser\n  }\n\n  return (\n    <RealmContext.Provider value={providerState}>\n      {props.children}\n    </RealmContext.Provider>\n  );\n}\n\nconst RealmContext = createContext({ realmUser: null });\nconst useRealm = () => useContext(RealmContext);\n\nexport {\n  RealmContext,\n  useRealm,\n  RealmProvider\n}\n","import React, {useEffect, useState, useCallback, useRef} from \"react\";\nimport { H2, H3, Body } from \"@leafygreen-ui/typography\";\nimport { Table, TableHeader, Row, Cell } from '@leafygreen-ui/table';\nimport ConfirmationModal from \"@leafygreen-ui/confirmation-modal\";\nimport Modal from \"@leafygreen-ui/modal\";\nimport TextInput from '@leafygreen-ui/text-input';\nimport Checkbox from '@leafygreen-ui/checkbox';\nimport Button from \"@leafygreen-ui/button\";\nimport Icon from '@leafygreen-ui/icon';\nimport IconButton from '@leafygreen-ui/icon-button';\nimport { useRealm } from \"../providers/Realm\";\nimport { css } from \"@leafygreen-ui/emotion\";\n\nimport * as QRCode from \"qrcode\";\n\nexport default function Routes () {\n  let [insertModalOpened, setInsertModalOpened] = useState(false);\n  let [qrCodeModalOpened, setQrCodeModalOpened] = useState(false);\n  let [qrCodeDestination, setQrCodeDestination] = useState(\"\");\n  let [chartModalOpened, setChartModalOpened] = useState(false);\n  let [chartRoute, setChartRoute] = useState(\"\");\n  let [routeStats, setRouteStats] = useState({});\n  let [route, setRoute] = useState(\"\");\n  let [title, setTitle] = useState(\"\");\n  let [description, setDescription] = useState(\"\");\n  let [to, setTo] = useState(\"\");\n  let [isPublic, setIsPublic] = useState(true); \n  let [data, setData] = useState([]);\n\n  let { realmUser } = useRealm();\n  let currentUserId = realmUser?.id;\n\n  const qrCodeModalStyle = css`\n    text-align: center;\n  `\n\n  const chartModalStyle = css`\n  \n  `\n\n  const topBarStyle = css`\n    text-align: right;\n  `\n\n  const canvasRef = useRef(null);\n\n  const getData = useCallback(async () => {\n    if(!realmUser) return;\n    let results = await realmUser.functions.getAllRoutes(); \n    setData(results);\n  }, [realmUser]);\n\n  const handleDelete = async (id) => {\n    await realmUser.functions.deleteRoute(id);\n    getData();\n  }\n\n  const handleModalConfirm = async() => {\n    await realmUser.functions.insertRoute({route, to, title, description, isPublic});\n    await getData();\n    setRoute(\"\");\n    setTo(\"\");\n    setDescription(\"\");\n    setTitle(\"\");\n    setInsertModalOpened(false);\n  }\n\n  const showQrCode = async (route, destinationUrl) => {\n    await setQrCodeModalOpened(true);\n    setQrCodeDestination(`mdb.link${route}`);\n    let canvas = canvasRef.current; \n    QRCode.toCanvas(canvas, destinationUrl, {width: 480, color: {dark: \"#023430\"}}, function (error) {\n      if (error) console.error(error);\n    });\n  }\n\n  const showChartModal = async (route) => {\n    setChartModalOpened(true);\n    setChartRoute(route);\n    let stats = realmUser.functions.getRouteStats(route);\n    setRouteStats(stats);\n  }\n\n  useEffect(() => { getData() }, [getData]);\n\n  return  (\n    <React.Fragment>\n      <H2>List of Short URLs</H2>\n\n      <p className={topBarStyle}>\n        <Button \n          onClick={() => setInsertModalOpened(true)}\n          variant=\"primary\"\n          leftGlyph={<Icon glyph=\"Plus\" />}\n        >\n          Insert New Short URL\n        </Button>\n      </p>\n\n      <ConfirmationModal\n        open={insertModalOpened}\n        onConfirm={handleModalConfirm}\n        onCancel={() => setInsertModalOpened(false)}\n        title=\"Add New Short URL\"\n        buttonText=\"Save New Shortie\"\n      >\n        Create a new short route here.\n        <TextInput\n          label=\"Short Route\"\n          description=\"Route starting with '/'\"\n          placeholder=\"/route\"\n          onChange={e => setRoute(e.target.value)}\n          value={route}\n        />\n        <TextInput\n          label=\"Destination\"\n          description=\"Enter a destination URL\"\n          placeholder=\"https://example.com\"\n          onChange={e => setTo(e.target.value)}\n          value={to}\n        />\n        <TextInput\n          label=\"Title\"\n          description=\"Shown in the public list when no match is found\"\n          placeholder=\"\"\n          onChange={e => setTitle(e.target.value)}\n          value={title}\n        />\n        <TextInput\n          label=\"Description\"\n          description=\"Shown in the link previews\"\n          placeholder=\"\"\n          onChange={e => setDescription(e.target.value)}\n          value={description}\n        />\n        <Checkbox\n          onChange={e => setIsPublic(!isPublic)}\n          label=\"Is this item public?\"\n          checked={isPublic}\n        />\n      </ConfirmationModal>\n\n      <Modal open={qrCodeModalOpened} setOpen={setQrCodeModalOpened} className={qrCodeModalStyle}>\n        <H3>QR Code for {qrCodeDestination}</H3>\n        <canvas ref={canvasRef} width=\"300\"></canvas>\n      </Modal>\n\n      <Modal open={chartModalOpened} setOpen={setChartModalOpened} className={chartModalStyle}>\n        <H3>Stats for {chartRoute}</H3>\n        <Body>\n          Number of visitors in the last 7 days: {routeStats?.stats?.visits || \"0\"}\n        </Body>\n      </Modal>\n\n      <Table\n        data={data}\n        columns={[\n          <TableHeader label=\"Short URL\"  sortBy={datum => datum.route}/>,\n          <TableHeader label=\"Destination\"  sortBy={datum => datum.to}/>,\n          <TableHeader label=\"Title\"  sortBy={datum => datum.title}/>,\n          <TableHeader label=\"Public\" />,\n          <TableHeader label=\"Actions\" />\n        ]}\n      >\n        {({ datum }) => (\n          <Row key={datum._id}>\n            <Cell>{datum.route}</Cell>\n            <Cell>{datum.to}</Cell>\n            <Cell>{datum.title || \" \"}</Cell>\n            <Cell>{datum.isPublic ? \"Yes\" : \"No\"}</Cell>\n            <Cell>\n              {currentUserId === datum.owner && \n              <IconButton darkMode={true} aria-label=\"Delete\" onClick={() => handleDelete(datum._id.toString())}>\n                <Icon glyph=\"Trash\" fill=\"#aa0000\" />\n              </IconButton>\n              }\n              <IconButton darkMode={true} aria-label=\"QRCode\" onClick={() => showQrCode(datum.route, datum.to)}>\n                <Icon glyph=\"Sweep\" />\n              </IconButton>\n              <IconButton darkMode={true} aria-label=\"Chart\" onClick={() => showChartModal(datum.route)}>\n                <Icon glyph=\"Charts\" />\n              </IconButton>\n            </Cell>\n          </Row>\n        )}\n      </Table>\n    </React.Fragment>\n  )\n}","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { H3, Body } from \"@leafygreen-ui/typography\";\nimport Button from \"@leafygreen-ui/button\";\nimport { css } from \"@leafygreen-ui/emotion\";\n\nexport default function Login () {\n  const { loginWithRedirect } = useAuth0();\n\n  const handleLogin = async () => {\n    await loginWithRedirect();\n  }\n\n  const headerStyle = css`\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    gap: 16px;\n    padding: 24px;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n  `\n\n  const mainStyle = css`\n    padding: 24px;\n    align-items: center;\n  `\n\n  return  (\n    <React.Fragment>\n      <section className={headerStyle}>\n        <Header title=\"Welcome!\"></Header>\n      </section>\n      <section className={mainStyle}>\n        <H3>Please login</H3>\n        <Body>You can use the button below to open a session.</Body>\n\n        <Button variant=\"primary\" onClick={() => handleLogin()}>Log In</Button>\n\n      </section>\n    </React.Fragment>\n  )\n}","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { H3, Body } from \"@leafygreen-ui/typography\";\nimport Button from \"@leafygreen-ui/button\";\nimport { css } from \"@leafygreen-ui/emotion\";\n\nexport default function Login () {\n  const { logout } = useAuth0();\n\n  const handleLogout = async () => {\n    await logout();\n  }\n\n  const headerStyle = css`\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    gap: 16px;\n    padding: 24px;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);\n    z-index: 1;\n  `\n\n  const mainStyle = css`\n    padding: 24px;\n    align-items: center;\n  `\n\n  return  (\n    <React.Fragment>\n      <section className={headerStyle}>\n        <Header title=\"Get outta here!\"></Header>\n      </section>\n      <section className={mainStyle}>\n        <H3>Please logout</H3>\n        <Body>You can use the button below to close a session.</Body>\n\n        <Button variant=\"primary\" onClick={() => handleLogout()}>Log Out</Button>\n\n      </section>\n    </React.Fragment>\n  )\n}","import ChartsEmbedSDK from \"@mongodb-js/charts-embed-dom\";\nimport { Fragment, useEffect } from \"react\";\n\nexport default function Stats() {\n\n  useEffect(() => {\n    const sdk = new ChartsEmbedSDK({\n      baseUrl: \"https://charts.mongodb.com/charts-mdb-link-tcawx\"\n    });\n    const dashboard = sdk.createDashboard( {\n      dashboardId: \"6304b9d7-df9a-46e5-8fc2-687fa31be646\",\n        height: \"700px\",\n        widthMode: \"scale\",\n        heightMode: \"fixed\"\n    });\n    dashboard.render(document.getElementById(\"dashboard\"));  \n  }, []);\n\n  return(\n    <Fragment>\n      <div id=\"dashboard\"></div>\n    </Fragment>\n  )\n}","import \"./styles.css\";\nimport \"./fonts.css\";\nimport LeafygreenProvider from '@leafygreen-ui/leafygreen-provider';\nimport Layout from \"./components/Layout\";\nimport { Auth0Provider, useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Outlet\n} from \"react-router-dom\";\nimport settings from \"./config\";\n\nimport Home from \"./pages/Home\";\nimport Shorties from \"./pages/Shorties\";\nimport Login from \"./pages/Login\";\nimport Logout from \"./pages/Logout\";\nimport Stats from \"./pages/Stats\";\n\nimport { RealmProvider } from \"./providers/Realm\";\n\nfunction PrivateOutlet() {\n  let { isAuthenticated } = useAuth0();\n  return isAuthenticated ? <Outlet /> : <div>You need to login to see this page</div>;\n}\n\nfunction App() {\n  return (\n    <Auth0Provider {...settings.AUTH0} >\n      <RealmProvider appId={settings.REALM.appId}>\n        <LeafygreenProvider>\n          <Router>\n            <Routes>\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/logout\" element={<Logout />} />\n              <Route path=\"/\" element={<Layout />}>\n                <Route path=\"app\" element={<PrivateOutlet />}>\n                  <Route path=\"routes\" element={<Shorties />} />\n                  <Route path=\"stats\" element={<Stats />} />\n                </Route>\n                <Route path=\"/\" element={<Home />} />\n              </Route>\n            </Routes>\n          </Router>\n        </LeafygreenProvider>\n      </RealmProvider>\n    </Auth0Provider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { css } from '@leafygreen-ui/emotion';\n\nconst CDN = 'https://d2va9gm4j17fy9.cloudfront.net';\nconst fontsURL = `${CDN}/fonts`;\n\nexport const globalStyles = css`\n  /**\n   * Euclid\n   */\n\n  /* Semibold */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Semibold-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Semibold-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Semibold.ttf')\n        format('truetype');\n    font-weight: 700;\n    font-style: normal;\n  }\n\n  /* Semibold Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-SemiboldItalic.ttf')\n        format('truetype');\n    font-weight: 700;\n    font-style: italic;\n  }\n\n  /* Medium */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Medium-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Medium-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Medium.ttf')\n        format('truetype');\n    font-weight: 500;\n    font-style: normal;\n  }\n\n  /* Medium Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-MediumItalic.ttf')\n        format('truetype');\n    font-weight: 500;\n    font-style: italic;\n  }\n\n  /* Normal */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-Regular-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Regular-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-Regular.ttf')\n        format('truetype');\n    font-weight: 400;\n    font-style: normal;\n  }\n\n  /* Italic */\n  @font-face {\n    font-family: 'Euclid Circular A';\n    src: url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic-WebXL.woff')\n        format('woff'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic-WebXL.woff2')\n        format('woff2'),\n      url('${fontsURL}euclid-circular/EuclidCircularA-RegularItalic.ttf')\n        format('truetype');\n    font-weight: 400;\n    font-style: italic;\n  }\n\n  /**\n   * Value Serif\n   */\n\n  /* Bold */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 700;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Bold.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Bold.woff2') format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Bold.ttf')\n        format('truetype');\n  }\n\n  /* Medium */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 500;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Medium.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Medium.woff2')\n        format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Medium.ttf')\n        format('truetype');\n  }\n\n  /* Normal */\n  @font-face {\n    font-family: 'MongoDB Value Serif';\n    font-weight: 400;\n    src: url('${fontsURL}value-serif/MongoDBValueSerif-Regular.woff')\n        format('woff'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Regular.woff2')\n        format('woff2'),\n      url('${fontsURL}value-serif/MongoDBValueSerif-Regular.ttf')\n        format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: normal;\n    src: url('${fontsURL}/akzidgrostdreg.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdreg.eot?#iefix')\n        format('embedded-opentype'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdreg.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdreg.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: 600;\n    src: url('${fontsURL}/akzidgrostdmed.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdmed.eot?#iefix')\n        format('embedded-opentype'),\n      /* IE6-IE8 */ url('${fontsURL}/akzidgrostdmed.woff') format('woff'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdmed.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdmed.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  @font-face {\n    font-family: 'Akzidenz';\n    font-weight: bold;\n    src: url('${fontsURL}/akzidgrostdmed.eot');\n    /* IE9 Compat Modes */\n    src: url('${fontsURL}/akzidgrostdmed.eot?#iefix')\n        format('embedded-opentype'),\n      /* IE6-IE8 */ url('${fontsURL}/akzidgrostdmed.woff') format('woff'),\n      /* Pretty Modern Browsers */ url('${fontsURL}/akzidgrostdmed.ttf')\n        format('truetype'),\n      /* Safari, Android, iOS */ url('${fontsURL}/akzidgrostdmed.svg#Akzidenz')\n        format('svg');\n    /* Legacy iOS */\n  }\n\n  html {\n    font-family: 'Euclid Circular A', 'Akzidenz', 'Helvetica Neue', Helvetica,\n      Arial, sans-serif;\n    font-weight: normal;\n    font-style: normal;\n  }\n\n  body {\n    margin: 0;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className={globalStyles}>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}